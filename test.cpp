#include "../fast_io/include/fast_io.h"
#include "na_serializer.hpp"
#include "na_serializer_nbt.hpp"

struct test_type
{
    std::int8_t i8;
    std::int64_t i64;
    std::int16_t i16;
    double dbl;
};
struct simple_test
{
    std::int8_t mem1;
    std::int64_t longmm;
    std::int8_t mem2;
};
struct outer_type
{
    std::int8_t i8;
    test_type tt;
    na::nbt::nbt_list<simple_test, 3> ls;
    na::nbt::nbt_string t_string;
    na::nbt::nbt_list<double, 4> li2;
    std::int64_t i64_8;
};

int main()
{
    {
        std::array<std::uint8_t, 253> arr{0x0A, 0x00, 0x00, 0x01, 0x00, 0x02, 0x69, 0x38, 0x03, 0x0A, 0x00, 0x02, 0x74, 0x74, 0x01, 0x00, 0x02, 0x69, 0x38, 0x06, 0x04, 0x00, 0x03, 0x69, 0x36, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x03, 0x69, 0x31, 0x36, 0x00, 0x08, 0x06, 0x00, 0x03, 0x64, 0x62, 0x6C, 0x40, 0xFB, 0xF5, 0x23, 0x12, 0x5A, 0xAB, 0x47, 0x00, 0x09, 0x00, 0x02, 0x6C, 0x73, 0x0A, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x04, 0x6D, 0x65, 0x6D, 0x31, 0x01, 0x04, 0x00, 0x06, 0x6C, 0x6F, 0x6E, 0x67, 0x6D, 0x6D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xAB, 0x01, 0x00, 0x04, 0x6D, 0x65, 0x6D, 0x32, 0x04, 0x00, 0x01, 0x00, 0x04, 0x6D, 0x65, 0x6D, 0x31, 0x02, 0x04, 0x00, 0x06, 0x6C, 0x6F, 0x6E, 0x67, 0x6D, 0x6D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xAB, 0x01, 0x00, 0x04, 0x6D, 0x65, 0x6D, 0x32, 0x04, 0x00, 0x01, 0x00, 0x04, 0x6D, 0x65, 0x6D, 0x31, 0x03, 0x04, 0x00, 0x06, 0x6C, 0x6F, 0x6E, 0x67, 0x6D, 0x6D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xAB, 0x01, 0x00, 0x04, 0x6D, 0x65, 0x6D, 0x32, 0x04, 0x00, 0x08, 0x00, 0x08, 0x74, 0x5F, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x00, 0x0B, 0x68, 0x65, 0x6C, 0x6C, 0x6F, 0x20, 0x77, 0x6F, 0x72, 0x6C, 0x64, 0x09, 0x00, 0x03, 0x6C, 0x69, 0x32, 0x06, 0x00, 0x00, 0x00, 0x04, 0x40, 0x0C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCD, 0x40, 0x13, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0xF2, 0x3D, 0x70, 0xA3, 0xD7, 0x0A, 0x3D, 0x40, 0x14, 0x8F, 0x5C, 0x28, 0xF5, 0xC2, 0x8F, 0x04, 0x00, 0x05, 0x69, 0x36, 0x34, 0x5F, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x9A, 0x00};
        std::span buf{arr};
        outer_type value{};
        na::nbt::nbt_error errc{};
        auto ret{na::serializer::deserialize<na::nbt::nbt, na::nbt::option<std::endian::big>>(value, std::as_bytes(buf), errc)};
        fast_io::io::println(fast_io::u8out(), fast_io::mnp::boolalpha(ret), " ", value.i8, " ", value.tt.i8, " ", value.tt.i64, " ", value.tt.i16, " ", value.tt.dbl, " ", value.t_string, " ", value.li2[0], " ", value.li2[1], " ", value.li2[2], " ", value.li2[3], " ", value.i64_8);
    }
}